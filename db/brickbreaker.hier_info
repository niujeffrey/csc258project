|BrickBreaker
CLOCK_50 => CLOCK_50.IN4
KEY[0] => resetn.IN4
KEY[1] => _.IN1
KEY[1] => _.IN1
KEY[2] => _.IN1
KEY[2] => _.IN1
KEY[3] => ~NO_FANOUT~
HEX0[0] <= hex_decoder:hex0.segments
HEX0[1] <= hex_decoder:hex0.segments
HEX0[2] <= hex_decoder:hex0.segments
HEX0[3] <= hex_decoder:hex0.segments
HEX0[4] <= hex_decoder:hex0.segments
HEX0[5] <= hex_decoder:hex0.segments
HEX0[6] <= hex_decoder:hex0.segments
HEX1[0] <= hex_decoder:hex1.segments
HEX1[1] <= hex_decoder:hex1.segments
HEX1[2] <= hex_decoder:hex1.segments
HEX1[3] <= hex_decoder:hex1.segments
HEX1[4] <= hex_decoder:hex1.segments
HEX1[5] <= hex_decoder:hex1.segments
HEX1[6] <= hex_decoder:hex1.segments
HEX2[0] <= hex_decoder:hex2.segments
HEX2[1] <= hex_decoder:hex2.segments
HEX2[2] <= hex_decoder:hex2.segments
HEX2[3] <= hex_decoder:hex2.segments
HEX2[4] <= hex_decoder:hex2.segments
HEX2[5] <= hex_decoder:hex2.segments
HEX2[6] <= hex_decoder:hex2.segments
HEX3[0] <= hex_decoder:hex3.segments
HEX3[1] <= hex_decoder:hex3.segments
HEX3[2] <= hex_decoder:hex3.segments
HEX3[3] <= hex_decoder:hex3.segments
HEX3[4] <= hex_decoder:hex3.segments
HEX3[5] <= hex_decoder:hex3.segments
HEX3[6] <= hex_decoder:hex3.segments
HEX4[0] <= hex_decoder:hex4.segments
HEX4[1] <= hex_decoder:hex4.segments
HEX4[2] <= hex_decoder:hex4.segments
HEX4[3] <= hex_decoder:hex4.segments
HEX4[4] <= hex_decoder:hex4.segments
HEX4[5] <= hex_decoder:hex4.segments
HEX4[6] <= hex_decoder:hex4.segments
HEX5[0] <= hex_decoder:hex5.segments
HEX5[1] <= hex_decoder:hex5.segments
HEX5[2] <= hex_decoder:hex5.segments
HEX5[3] <= hex_decoder:hex5.segments
HEX5[4] <= hex_decoder:hex5.segments
HEX5[5] <= hex_decoder:hex5.segments
HEX5[6] <= hex_decoder:hex5.segments
LEDR[0] <= mouse_tracker:tester.right_click
LEDR[1] <= mouse_tracker:tester.left_click
LEDR[2] <= <GND>
VGA_CLK <= vga_adapter:VGA.VGA_CLK
VGA_HS <= vga_adapter:VGA.VGA_HS
VGA_VS <= vga_adapter:VGA.VGA_VS
VGA_BLANK_N <= vga_adapter:VGA.VGA_BLANK
VGA_SYNC_N <= vga_adapter:VGA.VGA_SYNC
VGA_R[0] <= vga_adapter:VGA.VGA_R
VGA_R[1] <= vga_adapter:VGA.VGA_R
VGA_R[2] <= vga_adapter:VGA.VGA_R
VGA_R[3] <= vga_adapter:VGA.VGA_R
VGA_R[4] <= vga_adapter:VGA.VGA_R
VGA_R[5] <= vga_adapter:VGA.VGA_R
VGA_R[6] <= vga_adapter:VGA.VGA_R
VGA_R[7] <= vga_adapter:VGA.VGA_R
VGA_R[8] <= vga_adapter:VGA.VGA_R
VGA_R[9] <= vga_adapter:VGA.VGA_R
VGA_G[0] <= vga_adapter:VGA.VGA_G
VGA_G[1] <= vga_adapter:VGA.VGA_G
VGA_G[2] <= vga_adapter:VGA.VGA_G
VGA_G[3] <= vga_adapter:VGA.VGA_G
VGA_G[4] <= vga_adapter:VGA.VGA_G
VGA_G[5] <= vga_adapter:VGA.VGA_G
VGA_G[6] <= vga_adapter:VGA.VGA_G
VGA_G[7] <= vga_adapter:VGA.VGA_G
VGA_G[8] <= vga_adapter:VGA.VGA_G
VGA_G[9] <= vga_adapter:VGA.VGA_G
VGA_B[0] <= vga_adapter:VGA.VGA_B
VGA_B[1] <= vga_adapter:VGA.VGA_B
VGA_B[2] <= vga_adapter:VGA.VGA_B
VGA_B[3] <= vga_adapter:VGA.VGA_B
VGA_B[4] <= vga_adapter:VGA.VGA_B
VGA_B[5] <= vga_adapter:VGA.VGA_B
VGA_B[6] <= vga_adapter:VGA.VGA_B
VGA_B[7] <= vga_adapter:VGA.VGA_B
VGA_B[8] <= vga_adapter:VGA.VGA_B
VGA_B[9] <= vga_adapter:VGA.VGA_B
PS2_CLK <> mouse_tracker:tester.PS2_CLK
PS2_DAT <> mouse_tracker:tester.PS2_DAT


|BrickBreaker|vga_adapter:VGA
resetn => resetn.IN1
clock => clock.IN2
colour[0] => colour[0].IN1
colour[1] => colour[1].IN1
colour[2] => colour[2].IN1
x[0] => x[0].IN1
x[1] => x[1].IN1
x[2] => x[2].IN1
x[3] => x[3].IN1
x[4] => x[4].IN1
x[5] => x[5].IN1
x[6] => x[6].IN1
x[7] => x[7].IN1
y[0] => y[0].IN1
y[1] => y[1].IN1
y[2] => y[2].IN1
y[3] => y[3].IN1
y[4] => y[4].IN1
y[5] => y[5].IN1
y[6] => y[6].IN1
plot => writeEn.IN1
VGA_R[0] <= vga_controller:controller.VGA_R
VGA_R[1] <= vga_controller:controller.VGA_R
VGA_R[2] <= vga_controller:controller.VGA_R
VGA_R[3] <= vga_controller:controller.VGA_R
VGA_R[4] <= vga_controller:controller.VGA_R
VGA_R[5] <= vga_controller:controller.VGA_R
VGA_R[6] <= vga_controller:controller.VGA_R
VGA_R[7] <= vga_controller:controller.VGA_R
VGA_R[8] <= vga_controller:controller.VGA_R
VGA_R[9] <= vga_controller:controller.VGA_R
VGA_G[0] <= vga_controller:controller.VGA_G
VGA_G[1] <= vga_controller:controller.VGA_G
VGA_G[2] <= vga_controller:controller.VGA_G
VGA_G[3] <= vga_controller:controller.VGA_G
VGA_G[4] <= vga_controller:controller.VGA_G
VGA_G[5] <= vga_controller:controller.VGA_G
VGA_G[6] <= vga_controller:controller.VGA_G
VGA_G[7] <= vga_controller:controller.VGA_G
VGA_G[8] <= vga_controller:controller.VGA_G
VGA_G[9] <= vga_controller:controller.VGA_G
VGA_B[0] <= vga_controller:controller.VGA_B
VGA_B[1] <= vga_controller:controller.VGA_B
VGA_B[2] <= vga_controller:controller.VGA_B
VGA_B[3] <= vga_controller:controller.VGA_B
VGA_B[4] <= vga_controller:controller.VGA_B
VGA_B[5] <= vga_controller:controller.VGA_B
VGA_B[6] <= vga_controller:controller.VGA_B
VGA_B[7] <= vga_controller:controller.VGA_B
VGA_B[8] <= vga_controller:controller.VGA_B
VGA_B[9] <= vga_controller:controller.VGA_B
VGA_HS <= vga_controller:controller.VGA_HS
VGA_VS <= vga_controller:controller.VGA_VS
VGA_BLANK <= vga_controller:controller.VGA_BLANK
VGA_SYNC <= vga_controller:controller.VGA_SYNC
VGA_CLK <= vga_controller:controller.VGA_CLK


|BrickBreaker|vga_adapter:VGA|vga_address_translator:user_input_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|BrickBreaker|vga_adapter:VGA|altsyncram:VideoMemory
wren_a => altsyncram_m6m1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_m6m1:auto_generated.data_a[0]
data_a[1] => altsyncram_m6m1:auto_generated.data_a[1]
data_a[2] => altsyncram_m6m1:auto_generated.data_a[2]
data_b[0] => ~NO_FANOUT~
data_b[1] => ~NO_FANOUT~
data_b[2] => ~NO_FANOUT~
address_a[0] => altsyncram_m6m1:auto_generated.address_a[0]
address_a[1] => altsyncram_m6m1:auto_generated.address_a[1]
address_a[2] => altsyncram_m6m1:auto_generated.address_a[2]
address_a[3] => altsyncram_m6m1:auto_generated.address_a[3]
address_a[4] => altsyncram_m6m1:auto_generated.address_a[4]
address_a[5] => altsyncram_m6m1:auto_generated.address_a[5]
address_a[6] => altsyncram_m6m1:auto_generated.address_a[6]
address_a[7] => altsyncram_m6m1:auto_generated.address_a[7]
address_a[8] => altsyncram_m6m1:auto_generated.address_a[8]
address_a[9] => altsyncram_m6m1:auto_generated.address_a[9]
address_a[10] => altsyncram_m6m1:auto_generated.address_a[10]
address_a[11] => altsyncram_m6m1:auto_generated.address_a[11]
address_a[12] => altsyncram_m6m1:auto_generated.address_a[12]
address_a[13] => altsyncram_m6m1:auto_generated.address_a[13]
address_a[14] => altsyncram_m6m1:auto_generated.address_a[14]
address_b[0] => altsyncram_m6m1:auto_generated.address_b[0]
address_b[1] => altsyncram_m6m1:auto_generated.address_b[1]
address_b[2] => altsyncram_m6m1:auto_generated.address_b[2]
address_b[3] => altsyncram_m6m1:auto_generated.address_b[3]
address_b[4] => altsyncram_m6m1:auto_generated.address_b[4]
address_b[5] => altsyncram_m6m1:auto_generated.address_b[5]
address_b[6] => altsyncram_m6m1:auto_generated.address_b[6]
address_b[7] => altsyncram_m6m1:auto_generated.address_b[7]
address_b[8] => altsyncram_m6m1:auto_generated.address_b[8]
address_b[9] => altsyncram_m6m1:auto_generated.address_b[9]
address_b[10] => altsyncram_m6m1:auto_generated.address_b[10]
address_b[11] => altsyncram_m6m1:auto_generated.address_b[11]
address_b[12] => altsyncram_m6m1:auto_generated.address_b[12]
address_b[13] => altsyncram_m6m1:auto_generated.address_b[13]
address_b[14] => altsyncram_m6m1:auto_generated.address_b[14]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_m6m1:auto_generated.clock0
clock1 => altsyncram_m6m1:auto_generated.clock1
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= <GND>
q_a[1] <= <GND>
q_a[2] <= <GND>
q_b[0] <= altsyncram_m6m1:auto_generated.q_b[0]
q_b[1] <= altsyncram_m6m1:auto_generated.q_b[1]
q_b[2] <= altsyncram_m6m1:auto_generated.q_b[2]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|BrickBreaker|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[10] => ram_block1a8.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[11] => ram_block1a8.PORTAADDR11
address_a[12] => ram_block1a0.PORTAADDR12
address_a[12] => ram_block1a1.PORTAADDR12
address_a[12] => ram_block1a2.PORTAADDR12
address_a[12] => ram_block1a3.PORTAADDR12
address_a[12] => ram_block1a4.PORTAADDR12
address_a[12] => ram_block1a5.PORTAADDR12
address_a[13] => decode_7la:decode2.data[0]
address_a[13] => decode_7la:wren_decode_a.data[0]
address_a[14] => decode_7la:decode2.data[1]
address_a[14] => decode_7la:wren_decode_a.data[1]
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[0] => ram_block1a3.PORTBADDR
address_b[0] => ram_block1a4.PORTBADDR
address_b[0] => ram_block1a5.PORTBADDR
address_b[0] => ram_block1a6.PORTBADDR
address_b[0] => ram_block1a7.PORTBADDR
address_b[0] => ram_block1a8.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[1] => ram_block1a3.PORTBADDR1
address_b[1] => ram_block1a4.PORTBADDR1
address_b[1] => ram_block1a5.PORTBADDR1
address_b[1] => ram_block1a6.PORTBADDR1
address_b[1] => ram_block1a7.PORTBADDR1
address_b[1] => ram_block1a8.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
address_b[2] => ram_block1a3.PORTBADDR2
address_b[2] => ram_block1a4.PORTBADDR2
address_b[2] => ram_block1a5.PORTBADDR2
address_b[2] => ram_block1a6.PORTBADDR2
address_b[2] => ram_block1a7.PORTBADDR2
address_b[2] => ram_block1a8.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[3] => ram_block1a1.PORTBADDR3
address_b[3] => ram_block1a2.PORTBADDR3
address_b[3] => ram_block1a3.PORTBADDR3
address_b[3] => ram_block1a4.PORTBADDR3
address_b[3] => ram_block1a5.PORTBADDR3
address_b[3] => ram_block1a6.PORTBADDR3
address_b[3] => ram_block1a7.PORTBADDR3
address_b[3] => ram_block1a8.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[4] => ram_block1a1.PORTBADDR4
address_b[4] => ram_block1a2.PORTBADDR4
address_b[4] => ram_block1a3.PORTBADDR4
address_b[4] => ram_block1a4.PORTBADDR4
address_b[4] => ram_block1a5.PORTBADDR4
address_b[4] => ram_block1a6.PORTBADDR4
address_b[4] => ram_block1a7.PORTBADDR4
address_b[4] => ram_block1a8.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[5] => ram_block1a1.PORTBADDR5
address_b[5] => ram_block1a2.PORTBADDR5
address_b[5] => ram_block1a3.PORTBADDR5
address_b[5] => ram_block1a4.PORTBADDR5
address_b[5] => ram_block1a5.PORTBADDR5
address_b[5] => ram_block1a6.PORTBADDR5
address_b[5] => ram_block1a7.PORTBADDR5
address_b[5] => ram_block1a8.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[6] => ram_block1a1.PORTBADDR6
address_b[6] => ram_block1a2.PORTBADDR6
address_b[6] => ram_block1a3.PORTBADDR6
address_b[6] => ram_block1a4.PORTBADDR6
address_b[6] => ram_block1a5.PORTBADDR6
address_b[6] => ram_block1a6.PORTBADDR6
address_b[6] => ram_block1a7.PORTBADDR6
address_b[6] => ram_block1a8.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
address_b[7] => ram_block1a1.PORTBADDR7
address_b[7] => ram_block1a2.PORTBADDR7
address_b[7] => ram_block1a3.PORTBADDR7
address_b[7] => ram_block1a4.PORTBADDR7
address_b[7] => ram_block1a5.PORTBADDR7
address_b[7] => ram_block1a6.PORTBADDR7
address_b[7] => ram_block1a7.PORTBADDR7
address_b[7] => ram_block1a8.PORTBADDR7
address_b[8] => ram_block1a0.PORTBADDR8
address_b[8] => ram_block1a1.PORTBADDR8
address_b[8] => ram_block1a2.PORTBADDR8
address_b[8] => ram_block1a3.PORTBADDR8
address_b[8] => ram_block1a4.PORTBADDR8
address_b[8] => ram_block1a5.PORTBADDR8
address_b[8] => ram_block1a6.PORTBADDR8
address_b[8] => ram_block1a7.PORTBADDR8
address_b[8] => ram_block1a8.PORTBADDR8
address_b[9] => ram_block1a0.PORTBADDR9
address_b[9] => ram_block1a1.PORTBADDR9
address_b[9] => ram_block1a2.PORTBADDR9
address_b[9] => ram_block1a3.PORTBADDR9
address_b[9] => ram_block1a4.PORTBADDR9
address_b[9] => ram_block1a5.PORTBADDR9
address_b[9] => ram_block1a6.PORTBADDR9
address_b[9] => ram_block1a7.PORTBADDR9
address_b[9] => ram_block1a8.PORTBADDR9
address_b[10] => ram_block1a0.PORTBADDR10
address_b[10] => ram_block1a1.PORTBADDR10
address_b[10] => ram_block1a2.PORTBADDR10
address_b[10] => ram_block1a3.PORTBADDR10
address_b[10] => ram_block1a4.PORTBADDR10
address_b[10] => ram_block1a5.PORTBADDR10
address_b[10] => ram_block1a6.PORTBADDR10
address_b[10] => ram_block1a7.PORTBADDR10
address_b[10] => ram_block1a8.PORTBADDR10
address_b[11] => ram_block1a0.PORTBADDR11
address_b[11] => ram_block1a1.PORTBADDR11
address_b[11] => ram_block1a2.PORTBADDR11
address_b[11] => ram_block1a3.PORTBADDR11
address_b[11] => ram_block1a4.PORTBADDR11
address_b[11] => ram_block1a5.PORTBADDR11
address_b[11] => ram_block1a6.PORTBADDR11
address_b[11] => ram_block1a7.PORTBADDR11
address_b[11] => ram_block1a8.PORTBADDR11
address_b[12] => ram_block1a0.PORTBADDR12
address_b[12] => ram_block1a1.PORTBADDR12
address_b[12] => ram_block1a2.PORTBADDR12
address_b[12] => ram_block1a3.PORTBADDR12
address_b[12] => ram_block1a4.PORTBADDR12
address_b[12] => ram_block1a5.PORTBADDR12
address_b[13] => address_reg_b[0].DATAIN
address_b[13] => decode_01a:rden_decode_b.data[0]
address_b[14] => address_reg_b[1].DATAIN
address_b[14] => decode_01a:rden_decode_b.data[1]
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clock1 => ram_block1a3.CLK1
clock1 => ram_block1a4.CLK1
clock1 => ram_block1a5.CLK1
clock1 => ram_block1a6.CLK1
clock1 => ram_block1a7.CLK1
clock1 => ram_block1a8.CLK1
clock1 => address_reg_b[1].CLK
clock1 => address_reg_b[0].CLK
clock1 => out_address_reg_b[1].CLK
clock1 => out_address_reg_b[0].CLK
data_a[0] => ram_block1a0.PORTADATAIN
data_a[0] => ram_block1a3.PORTADATAIN
data_a[0] => ram_block1a6.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[1] => ram_block1a4.PORTADATAIN
data_a[1] => ram_block1a7.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[2] => ram_block1a5.PORTADATAIN
data_a[2] => ram_block1a8.PORTADATAIN
q_b[0] <= mux_ifb:mux3.result[0]
q_b[1] <= mux_ifb:mux3.result[1]
q_b[2] <= mux_ifb:mux3.result[2]
wren_a => decode_7la:decode2.enable
wren_a => decode_7la:wren_decode_a.enable


|BrickBreaker|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_7la:decode2
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|BrickBreaker|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_01a:rden_decode_b
data[0] => w_anode143w[1].IN0
data[0] => w_anode157w[1].IN1
data[0] => w_anode166w[1].IN0
data[0] => w_anode175w[1].IN1
data[1] => w_anode143w[2].IN0
data[1] => w_anode157w[2].IN0
data[1] => w_anode166w[2].IN1
data[1] => w_anode175w[2].IN1
eq[0] <= w_anode143w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode157w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode166w[2].DB_MAX_OUTPUT_PORT_TYPE


|BrickBreaker|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_7la:wren_decode_a
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|BrickBreaker|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|mux_ifb:mux3
data[0] => data0_wire[0].IN0
data[1] => data0_wire[1].IN0
data[2] => data0_wire[2].IN0
data[3] => data1_wire[0].IN0
data[4] => data1_wire[1].IN0
data[5] => data1_wire[2].IN0
data[6] => data2_wire[0].IN0
data[7] => data2_wire[1].IN0
data[8] => data2_wire[2].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[2].IN0
sel[0] => data1_wire[2].IN1
sel[0] => data1_wire[1].IN1
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[2].IN1
sel[1] => data2_wire[1].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|BrickBreaker|vga_adapter:VGA|vga_pll:mypll
clock_in => clock_input_bus[0].IN1
clock_out <= altpll:altpll_component.clk


|BrickBreaker|vga_adapter:VGA|vga_pll:mypll|altpll:altpll_component
inclk[0] => altpll_80u:auto_generated.inclk[0]
inclk[1] => altpll_80u:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
clk[5] <= clk[5].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|BrickBreaker|vga_adapter:VGA|vga_pll:mypll|altpll:altpll_component|altpll_80u:auto_generated
clk[0] <= generic_pll1.O_OUTCLK
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
fbout <= generic_pll1.O_FBOUTCLK
inclk[0] => generic_pll1.I_REFCLK
inclk[1] => ~NO_FANOUT~
locked <= generic_pll1.LOCKED


|BrickBreaker|vga_adapter:VGA|vga_controller:controller
vga_clock => VGA_BLANK~reg0.CLK
vga_clock => VGA_VS~reg0.CLK
vga_clock => VGA_HS~reg0.CLK
vga_clock => VGA_BLANK1.CLK
vga_clock => VGA_VS1.CLK
vga_clock => VGA_HS1.CLK
vga_clock => yCounter[0].CLK
vga_clock => yCounter[1].CLK
vga_clock => yCounter[2].CLK
vga_clock => yCounter[3].CLK
vga_clock => yCounter[4].CLK
vga_clock => yCounter[5].CLK
vga_clock => yCounter[6].CLK
vga_clock => yCounter[7].CLK
vga_clock => yCounter[8].CLK
vga_clock => yCounter[9].CLK
vga_clock => xCounter[0].CLK
vga_clock => xCounter[1].CLK
vga_clock => xCounter[2].CLK
vga_clock => xCounter[3].CLK
vga_clock => xCounter[4].CLK
vga_clock => xCounter[5].CLK
vga_clock => xCounter[6].CLK
vga_clock => xCounter[7].CLK
vga_clock => xCounter[8].CLK
vga_clock => xCounter[9].CLK
vga_clock => VGA_CLK.DATAIN
resetn => xCounter[0].ACLR
resetn => xCounter[1].ACLR
resetn => xCounter[2].ACLR
resetn => xCounter[3].ACLR
resetn => xCounter[4].ACLR
resetn => xCounter[5].ACLR
resetn => xCounter[6].ACLR
resetn => xCounter[7].ACLR
resetn => xCounter[8].ACLR
resetn => xCounter[9].ACLR
resetn => yCounter[0].ACLR
resetn => yCounter[1].ACLR
resetn => yCounter[2].ACLR
resetn => yCounter[3].ACLR
resetn => yCounter[4].ACLR
resetn => yCounter[5].ACLR
resetn => yCounter[6].ACLR
resetn => yCounter[7].ACLR
resetn => yCounter[8].ACLR
resetn => yCounter[9].ACLR
pixel_colour[0] => VGA_B[0].DATAIN
pixel_colour[0] => VGA_B[9].DATAIN
pixel_colour[0] => VGA_B[8].DATAIN
pixel_colour[0] => VGA_B[7].DATAIN
pixel_colour[0] => VGA_B[6].DATAIN
pixel_colour[0] => VGA_B[5].DATAIN
pixel_colour[0] => VGA_B[4].DATAIN
pixel_colour[0] => VGA_B[3].DATAIN
pixel_colour[0] => VGA_B[2].DATAIN
pixel_colour[0] => VGA_B[1].DATAIN
pixel_colour[1] => VGA_G[0].DATAIN
pixel_colour[1] => VGA_G[9].DATAIN
pixel_colour[1] => VGA_G[8].DATAIN
pixel_colour[1] => VGA_G[7].DATAIN
pixel_colour[1] => VGA_G[6].DATAIN
pixel_colour[1] => VGA_G[5].DATAIN
pixel_colour[1] => VGA_G[4].DATAIN
pixel_colour[1] => VGA_G[3].DATAIN
pixel_colour[1] => VGA_G[2].DATAIN
pixel_colour[1] => VGA_G[1].DATAIN
pixel_colour[2] => VGA_R[0].DATAIN
pixel_colour[2] => VGA_R[9].DATAIN
pixel_colour[2] => VGA_R[8].DATAIN
pixel_colour[2] => VGA_R[7].DATAIN
pixel_colour[2] => VGA_R[6].DATAIN
pixel_colour[2] => VGA_R[5].DATAIN
pixel_colour[2] => VGA_R[4].DATAIN
pixel_colour[2] => VGA_R[3].DATAIN
pixel_colour[2] => VGA_R[2].DATAIN
pixel_colour[2] => VGA_R[1].DATAIN
memory_address[0] <= vga_address_translator:controller_translator.mem_address
memory_address[1] <= vga_address_translator:controller_translator.mem_address
memory_address[2] <= vga_address_translator:controller_translator.mem_address
memory_address[3] <= vga_address_translator:controller_translator.mem_address
memory_address[4] <= vga_address_translator:controller_translator.mem_address
memory_address[5] <= vga_address_translator:controller_translator.mem_address
memory_address[6] <= vga_address_translator:controller_translator.mem_address
memory_address[7] <= vga_address_translator:controller_translator.mem_address
memory_address[8] <= vga_address_translator:controller_translator.mem_address
memory_address[9] <= vga_address_translator:controller_translator.mem_address
memory_address[10] <= vga_address_translator:controller_translator.mem_address
memory_address[11] <= vga_address_translator:controller_translator.mem_address
memory_address[12] <= vga_address_translator:controller_translator.mem_address
memory_address[13] <= vga_address_translator:controller_translator.mem_address
memory_address[14] <= vga_address_translator:controller_translator.mem_address
VGA_R[0] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[1] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[2] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[3] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[4] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[5] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[6] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[7] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[8] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[9] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[0] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[1] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[2] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[3] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[4] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[5] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[6] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[7] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[8] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[9] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[0] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[1] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[2] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[3] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[4] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[5] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[6] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[7] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[8] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[9] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_HS <= VGA_HS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_VS <= VGA_VS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_BLANK <= VGA_BLANK~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_SYNC <= <VCC>
VGA_CLK <= vga_clock.DB_MAX_OUTPUT_PORT_TYPE


|BrickBreaker|vga_adapter:VGA|vga_controller:controller|vga_address_translator:controller_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|BrickBreaker|control:c0
clk => ball_frame_counter[0].CLK
clk => ball_frame_counter[1].CLK
clk => ball_frame_counter[2].CLK
clk => ball_frame_counter[3].CLK
clk => frame_counter[0].CLK
clk => frame_counter[1].CLK
clk => frame_counter[2].CLK
clk => frame_counter[3].CLK
clk => timer[0].CLK
clk => timer[1].CLK
clk => timer[2].CLK
clk => timer[3].CLK
clk => timer[4].CLK
clk => timer[5].CLK
clk => timer[6].CLK
clk => timer[7].CLK
clk => timer[8].CLK
clk => timer[9].CLK
clk => timer[10].CLK
clk => timer[11].CLK
clk => timer[12].CLK
clk => timer[13].CLK
clk => timer[14].CLK
clk => timer[15].CLK
clk => timer[16].CLK
clk => timer[17].CLK
clk => timer[18].CLK
clk => timer[19].CLK
clk => ball_counter[0].CLK
clk => ball_counter[1].CLK
clk => ball_counter[2].CLK
clk => ball_counter[3].CLK
clk => ball_counter[4].CLK
clk => ball_counter[5].CLK
clk => paddle_counter[0].CLK
clk => paddle_counter[1].CLK
clk => paddle_counter[2].CLK
clk => paddle_counter[3].CLK
clk => paddle_counter[4].CLK
clk => paddle_counter[5].CLK
clk => paddle_counter[6].CLK
clk => brick_counter[0].CLK
clk => brick_counter[1].CLK
clk => brick_counter[2].CLK
clk => brick_counter[3].CLK
clk => brick_counter[4].CLK
clk => brick_counter[5].CLK
clk => brick_counter[6].CLK
clk => draw_all_counter[0].CLK
clk => draw_all_counter[1].CLK
clk => draw_all_counter[2].CLK
clk => draw_all_counter[3].CLK
clk => draw_all_counter[4].CLK
clk => draw_all_counter[5].CLK
clk => draw_all_counter[6].CLK
clk => draw_all_counter[7].CLK
clk => draw_all_counter[8].CLK
clk => draw_all_counter[9].CLK
clk => draw_all_counter[10].CLK
clk => draw_all_counter[11].CLK
clk => ram_counter[0].CLK
clk => ram_counter[1].CLK
clk => ram_counter[2].CLK
clk => ram_counter[3].CLK
clk => ram_counter[4].CLK
clk => ram_counter[5].CLK
clk => clear_counter[0].CLK
clk => clear_counter[1].CLK
clk => clear_counter[2].CLK
clk => clear_counter[3].CLK
clk => clear_counter[4].CLK
clk => clear_counter[5].CLK
clk => clear_counter[6].CLK
clk => clear_counter[7].CLK
clk => clear_counter[8].CLK
clk => clear_counter[9].CLK
clk => clear_counter[10].CLK
clk => clear_counter[11].CLK
clk => clear_counter[12].CLK
clk => clear_counter[13].CLK
clk => clear_counter[14].CLK
clk => clear_counter[15].CLK
clk => current_state~1.DATAIN
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => timer.OUTPUTSELECT
resetn => frame_counter.OUTPUTSELECT
resetn => frame_counter.OUTPUTSELECT
resetn => frame_counter.OUTPUTSELECT
resetn => frame_counter.OUTPUTSELECT
resetn => ball_frame_counter.OUTPUTSELECT
resetn => ball_frame_counter.OUTPUTSELECT
resetn => ball_frame_counter.OUTPUTSELECT
resetn => ball_frame_counter.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => clear_counter.OUTPUTSELECT
resetn => clear_counter.OUTPUTSELECT
resetn => clear_counter.OUTPUTSELECT
resetn => clear_counter.OUTPUTSELECT
resetn => clear_counter.OUTPUTSELECT
resetn => clear_counter.OUTPUTSELECT
resetn => clear_counter.OUTPUTSELECT
resetn => clear_counter.OUTPUTSELECT
resetn => clear_counter.OUTPUTSELECT
resetn => clear_counter.OUTPUTSELECT
resetn => clear_counter.OUTPUTSELECT
resetn => clear_counter.OUTPUTSELECT
resetn => clear_counter.OUTPUTSELECT
resetn => clear_counter.OUTPUTSELECT
resetn => clear_counter.OUTPUTSELECT
resetn => clear_counter.OUTPUTSELECT
resetn => ram_counter.OUTPUTSELECT
resetn => ram_counter.OUTPUTSELECT
resetn => ram_counter.OUTPUTSELECT
resetn => ram_counter.OUTPUTSELECT
resetn => ram_counter.OUTPUTSELECT
resetn => ram_counter.OUTPUTSELECT
resetn => draw_all_counter.OUTPUTSELECT
resetn => draw_all_counter.OUTPUTSELECT
resetn => draw_all_counter.OUTPUTSELECT
resetn => draw_all_counter.OUTPUTSELECT
resetn => draw_all_counter.OUTPUTSELECT
resetn => draw_all_counter.OUTPUTSELECT
resetn => draw_all_counter.OUTPUTSELECT
resetn => draw_all_counter.OUTPUTSELECT
resetn => draw_all_counter.OUTPUTSELECT
resetn => draw_all_counter.OUTPUTSELECT
resetn => draw_all_counter.OUTPUTSELECT
resetn => draw_all_counter.OUTPUTSELECT
resetn => brick_counter.OUTPUTSELECT
resetn => brick_counter.OUTPUTSELECT
resetn => brick_counter.OUTPUTSELECT
resetn => brick_counter.OUTPUTSELECT
resetn => brick_counter.OUTPUTSELECT
resetn => brick_counter.OUTPUTSELECT
resetn => brick_counter.OUTPUTSELECT
resetn => paddle_counter.OUTPUTSELECT
resetn => paddle_counter.OUTPUTSELECT
resetn => paddle_counter.OUTPUTSELECT
resetn => paddle_counter.OUTPUTSELECT
resetn => paddle_counter.OUTPUTSELECT
resetn => paddle_counter.OUTPUTSELECT
resetn => paddle_counter.OUTPUTSELECT
resetn => ball_counter.OUTPUTSELECT
resetn => ball_counter.OUTPUTSELECT
resetn => ball_counter.OUTPUTSELECT
resetn => ball_counter.OUTPUTSELECT
resetn => ball_counter.OUTPUTSELECT
resetn => ball_counter.OUTPUTSELECT
key_left => ~NO_FANOUT~
key_right => ~NO_FANOUT~
mouse_x_in[0] => ~NO_FANOUT~
mouse_x_in[1] => ~NO_FANOUT~
mouse_x_in[2] => ~NO_FANOUT~
mouse_x_in[3] => ~NO_FANOUT~
mouse_x_in[4] => ~NO_FANOUT~
mouse_x_in[5] => ~NO_FANOUT~
mouse_x_in[6] => ~NO_FANOUT~
mouse_x_in[7] => ~NO_FANOUT~
display[0] <= <GND>
display[1] <= <GND>
display[2] <= <GND>
display[3] <= <GND>
display[4] <= <GND>
display[5] <= <GND>
display[6] <= <GND>
writeEn <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
store_ram <= store_ram.DB_MAX_OUTPUT_PORT_TYPE
draw_all_bricks <= draw_all_bricks.DB_MAX_OUTPUT_PORT_TYPE
draw <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
draw_paddle <= draw_paddle.DB_MAX_OUTPUT_PORT_TYPE
enable_black <= enable_black.DB_MAX_OUTPUT_PORT_TYPE
enable_paddle_move <= enable_paddle_move.DB_MAX_OUTPUT_PORT_TYPE
draw_ball <= draw_ball.DB_MAX_OUTPUT_PORT_TYPE
enable_ball_move <= enable_ball_move.DB_MAX_OUTPUT_PORT_TYPE
clear_screen <= clear_screen.DB_MAX_OUTPUT_PORT_TYPE
enable_brick_erase <= enable_brick_erase.DB_MAX_OUTPUT_PORT_TYPE
enable_collision_detection <= enable_collision_detection.DB_MAX_OUTPUT_PORT_TYPE
enable_black_brick <= enable_black_brick.DB_MAX_OUTPUT_PORT_TYPE


|BrickBreaker|datapath:d0
clk => clk.IN1
resetn => ball_x.OUTPUTSELECT
resetn => ball_x.OUTPUTSELECT
resetn => ball_x.OUTPUTSELECT
resetn => ball_x.OUTPUTSELECT
resetn => ball_x.OUTPUTSELECT
resetn => ball_x.OUTPUTSELECT
resetn => ball_x.OUTPUTSELECT
resetn => ball_x.OUTPUTSELECT
resetn => ball_y.OUTPUTSELECT
resetn => ball_y.OUTPUTSELECT
resetn => ball_y.OUTPUTSELECT
resetn => ball_y.OUTPUTSELECT
resetn => ball_y.OUTPUTSELECT
resetn => ball_y.OUTPUTSELECT
resetn => ball_y.OUTPUTSELECT
resetn => ball_x_dir.OUTPUTSELECT
resetn => ball_y_dir.OUTPUTSELECT
resetn => clear_screen_reg.OUTPUTSELECT
resetn => actually_collides.OUTPUTSELECT
resetn => address_of_collision.OUTPUTSELECT
resetn => address_of_collision.OUTPUTSELECT
resetn => address_of_collision.OUTPUTSELECT
resetn => address_of_collision.OUTPUTSELECT
resetn => address_of_collision.OUTPUTSELECT
resetn => address_of_collision.OUTPUTSELECT
resetn => address_of_collision.OUTPUTSELECT
resetn => address_of_collision.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => info_of_collided_brick.OUTPUTSELECT
resetn => brick_to_clear_x.OUTPUTSELECT
resetn => brick_to_clear_x.OUTPUTSELECT
resetn => brick_to_clear_x.OUTPUTSELECT
resetn => brick_to_clear_x.OUTPUTSELECT
resetn => brick_to_clear_x.OUTPUTSELECT
resetn => brick_to_clear_x.OUTPUTSELECT
resetn => brick_to_clear_x.OUTPUTSELECT
resetn => brick_to_clear_x.OUTPUTSELECT
resetn => brick_to_clear_y.OUTPUTSELECT
resetn => brick_to_clear_y.OUTPUTSELECT
resetn => brick_to_clear_y.OUTPUTSELECT
resetn => brick_to_clear_y.OUTPUTSELECT
resetn => brick_to_clear_y.OUTPUTSELECT
resetn => brick_to_clear_y.OUTPUTSELECT
resetn => brick_to_clear_y.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_info.OUTPUTSELECT
resetn => ram_address.OUTPUTSELECT
resetn => ram_address.OUTPUTSELECT
resetn => ram_address.OUTPUTSELECT
resetn => ram_address.OUTPUTSELECT
resetn => ram_address.OUTPUTSELECT
resetn => ram_address.OUTPUTSELECT
resetn => ram_address.OUTPUTSELECT
resetn => ram_address.OUTPUTSELECT
resetn => clear_x.OUTPUTSELECT
resetn => clear_x.OUTPUTSELECT
resetn => clear_x.OUTPUTSELECT
resetn => clear_x.OUTPUTSELECT
resetn => clear_x.OUTPUTSELECT
resetn => clear_x.OUTPUTSELECT
resetn => clear_x.OUTPUTSELECT
resetn => clear_x.OUTPUTSELECT
resetn => clear_y.OUTPUTSELECT
resetn => clear_y.OUTPUTSELECT
resetn => clear_y.OUTPUTSELECT
resetn => clear_y.OUTPUTSELECT
resetn => clear_y.OUTPUTSELECT
resetn => clear_y.OUTPUTSELECT
resetn => clear_y.OUTPUTSELECT
resetn => draw_counter.OUTPUTSELECT
resetn => draw_counter.OUTPUTSELECT
resetn => draw_counter.OUTPUTSELECT
resetn => draw_counter.OUTPUTSELECT
resetn => draw_counter.OUTPUTSELECT
resetn => draw_counter.OUTPUTSELECT
resetn => draw_ball_counter.OUTPUTSELECT
resetn => draw_ball_counter.OUTPUTSELECT
resetn => paddle_x.OUTPUTSELECT
resetn => paddle_x.OUTPUTSELECT
resetn => paddle_x.OUTPUTSELECT
resetn => paddle_x.OUTPUTSELECT
resetn => paddle_x.OUTPUTSELECT
resetn => paddle_x.OUTPUTSELECT
resetn => paddle_x.OUTPUTSELECT
resetn => paddle_x.OUTPUTSELECT
store_ram => store_ram.IN1
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_info.OUTPUTSELECT
draw_all => ram_address.OUTPUTSELECT
draw_all => ram_address.OUTPUTSELECT
draw_all => ram_address.OUTPUTSELECT
draw_all => ram_address.OUTPUTSELECT
draw_all => ram_address.OUTPUTSELECT
draw_all => ram_address.OUTPUTSELECT
draw_all => ram_address.OUTPUTSELECT
draw_all => ram_address.OUTPUTSELECT
draw_all => colour[0].OUTPUTSELECT
draw_all => colour[1].OUTPUTSELECT
draw_all => colour[2].OUTPUTSELECT
draw_all => y[0].OUTPUTSELECT
draw_all => y[1].OUTPUTSELECT
draw_all => y[2].OUTPUTSELECT
draw_all => y[3].OUTPUTSELECT
draw_all => y[4].OUTPUTSELECT
draw_all => y[5].OUTPUTSELECT
draw_all => y[6].OUTPUTSELECT
draw_all => x[0].OUTPUTSELECT
draw_all => x[1].OUTPUTSELECT
draw_all => x[2].OUTPUTSELECT
draw_all => x[3].OUTPUTSELECT
draw_all => x[4].OUTPUTSELECT
draw_all => x[5].OUTPUTSELECT
draw_all => x[6].OUTPUTSELECT
draw_all => x[7].OUTPUTSELECT
draw_all => x[7].IN1
draw => draw_counter.OUTPUTSELECT
draw => draw_counter.OUTPUTSELECT
draw => draw_counter.OUTPUTSELECT
draw => draw_counter.OUTPUTSELECT
draw => draw_counter.OUTPUTSELECT
draw => draw_counter.OUTPUTSELECT
draw_paddle => colour[1].OUTPUTSELECT
draw_paddle => colour[2].OUTPUTSELECT
draw_paddle => y[0].OUTPUTSELECT
draw_paddle => y[1].OUTPUTSELECT
draw_paddle => y[2].OUTPUTSELECT
draw_paddle => y[3].OUTPUTSELECT
draw_paddle => y[4].OUTPUTSELECT
draw_paddle => y[5].OUTPUTSELECT
draw_paddle => y[6].OUTPUTSELECT
draw_paddle => x[0].OUTPUTSELECT
draw_paddle => x[1].OUTPUTSELECT
draw_paddle => x[2].OUTPUTSELECT
draw_paddle => x[3].OUTPUTSELECT
draw_paddle => x[4].OUTPUTSELECT
draw_paddle => x[5].OUTPUTSELECT
draw_paddle => x[6].OUTPUTSELECT
draw_paddle => x[7].OUTPUTSELECT
draw_paddle => x[7].IN1
enable_black => colour[2].DATAB
enable_black => colour[2].DATAB
enable_black => colour[1].DATAB
enable_paddle_move => paddle_x.OUTPUTSELECT
enable_paddle_move => paddle_x.OUTPUTSELECT
enable_paddle_move => paddle_x.OUTPUTSELECT
enable_paddle_move => paddle_x.OUTPUTSELECT
enable_paddle_move => paddle_x.OUTPUTSELECT
enable_paddle_move => paddle_x.OUTPUTSELECT
enable_paddle_move => paddle_x.OUTPUTSELECT
enable_paddle_move => paddle_x.OUTPUTSELECT
mouse_x_in[0] => paddle_x.DATAB
mouse_x_in[1] => paddle_x.DATAB
mouse_x_in[2] => paddle_x.DATAB
mouse_x_in[3] => paddle_x.DATAB
mouse_x_in[4] => paddle_x.DATAB
mouse_x_in[5] => paddle_x.DATAB
mouse_x_in[6] => paddle_x.DATAB
mouse_x_in[7] => paddle_x.DATAB
key_right => ~NO_FANOUT~
key_left => ~NO_FANOUT~
draw_ball => draw_ball_counter.OUTPUTSELECT
draw_ball => draw_ball_counter.OUTPUTSELECT
draw_ball => colour[1].OUTPUTSELECT
draw_ball => colour[2].OUTPUTSELECT
draw_ball => y[0].OUTPUTSELECT
draw_ball => y[1].OUTPUTSELECT
draw_ball => y[2].OUTPUTSELECT
draw_ball => y[3].OUTPUTSELECT
draw_ball => y[4].OUTPUTSELECT
draw_ball => y[5].OUTPUTSELECT
draw_ball => y[6].OUTPUTSELECT
draw_ball => x[0].OUTPUTSELECT
draw_ball => x[1].OUTPUTSELECT
draw_ball => x[2].OUTPUTSELECT
draw_ball => x[3].OUTPUTSELECT
draw_ball => x[4].OUTPUTSELECT
draw_ball => x[5].OUTPUTSELECT
draw_ball => x[6].OUTPUTSELECT
draw_ball => x[7].OUTPUTSELECT
draw_ball => x[7].IN1
enable_ball_move => ball_x_dir.OUTPUTSELECT
enable_ball_move => ball_x.OUTPUTSELECT
enable_ball_move => ball_x.OUTPUTSELECT
enable_ball_move => ball_x.OUTPUTSELECT
enable_ball_move => ball_x.OUTPUTSELECT
enable_ball_move => ball_x.OUTPUTSELECT
enable_ball_move => ball_x.OUTPUTSELECT
enable_ball_move => ball_x.OUTPUTSELECT
enable_ball_move => ball_x.OUTPUTSELECT
enable_ball_move => ball_y.OUTPUTSELECT
enable_ball_move => ball_y.OUTPUTSELECT
enable_ball_move => ball_y.OUTPUTSELECT
enable_ball_move => ball_y.OUTPUTSELECT
enable_ball_move => ball_y.OUTPUTSELECT
enable_ball_move => ball_y.OUTPUTSELECT
enable_ball_move => ball_y.OUTPUTSELECT
enable_ball_move => ball_y_dir.OUTPUTSELECT
enable_ball_move => brick_to_clear_x.OUTPUTSELECT
enable_ball_move => brick_to_clear_x.OUTPUTSELECT
enable_ball_move => brick_to_clear_x.OUTPUTSELECT
enable_ball_move => brick_to_clear_x.OUTPUTSELECT
enable_ball_move => brick_to_clear_x.OUTPUTSELECT
enable_ball_move => brick_to_clear_x.OUTPUTSELECT
enable_ball_move => brick_to_clear_x.OUTPUTSELECT
enable_ball_move => brick_to_clear_x.OUTPUTSELECT
enable_ball_move => brick_to_clear_y.OUTPUTSELECT
enable_ball_move => brick_to_clear_y.OUTPUTSELECT
enable_ball_move => brick_to_clear_y.OUTPUTSELECT
enable_ball_move => brick_to_clear_y.OUTPUTSELECT
enable_ball_move => brick_to_clear_y.OUTPUTSELECT
enable_ball_move => brick_to_clear_y.OUTPUTSELECT
enable_ball_move => brick_to_clear_y.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => info_of_collided_brick.OUTPUTSELECT
enable_ball_move => actually_collides.OUTPUTSELECT
enable_ball_move => address_of_collision.OUTPUTSELECT
enable_ball_move => address_of_collision.OUTPUTSELECT
enable_ball_move => address_of_collision.OUTPUTSELECT
enable_ball_move => address_of_collision.OUTPUTSELECT
enable_ball_move => address_of_collision.OUTPUTSELECT
enable_ball_move => address_of_collision.OUTPUTSELECT
enable_ball_move => address_of_collision.OUTPUTSELECT
enable_ball_move => address_of_collision.OUTPUTSELECT
clear_screen => clear_screen_reg.DATAA
enable_collision_detection => ram_address.OUTPUTSELECT
enable_collision_detection => ram_address.OUTPUTSELECT
enable_collision_detection => ram_address.OUTPUTSELECT
enable_collision_detection => ram_address.OUTPUTSELECT
enable_collision_detection => ram_address.OUTPUTSELECT
enable_collision_detection => ram_address.OUTPUTSELECT
enable_collision_detection => ram_address.OUTPUTSELECT
enable_collision_detection => ram_address.OUTPUTSELECT
enable_collision_detection => ball_y_dir.OUTPUTSELECT
enable_collision_detection => brick_to_clear_x.OUTPUTSELECT
enable_collision_detection => brick_to_clear_x.OUTPUTSELECT
enable_collision_detection => brick_to_clear_x.OUTPUTSELECT
enable_collision_detection => brick_to_clear_x.OUTPUTSELECT
enable_collision_detection => brick_to_clear_x.OUTPUTSELECT
enable_collision_detection => brick_to_clear_x.OUTPUTSELECT
enable_collision_detection => brick_to_clear_x.OUTPUTSELECT
enable_collision_detection => brick_to_clear_x.OUTPUTSELECT
enable_collision_detection => brick_to_clear_y.OUTPUTSELECT
enable_collision_detection => brick_to_clear_y.OUTPUTSELECT
enable_collision_detection => brick_to_clear_y.OUTPUTSELECT
enable_collision_detection => brick_to_clear_y.OUTPUTSELECT
enable_collision_detection => brick_to_clear_y.OUTPUTSELECT
enable_collision_detection => brick_to_clear_y.OUTPUTSELECT
enable_collision_detection => brick_to_clear_y.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => info_of_collided_brick.OUTPUTSELECT
enable_collision_detection => actually_collides.OUTPUTSELECT
enable_collision_detection => address_of_collision.OUTPUTSELECT
enable_collision_detection => address_of_collision.OUTPUTSELECT
enable_collision_detection => address_of_collision.OUTPUTSELECT
enable_collision_detection => address_of_collision.OUTPUTSELECT
enable_collision_detection => address_of_collision.OUTPUTSELECT
enable_collision_detection => address_of_collision.OUTPUTSELECT
enable_collision_detection => address_of_collision.OUTPUTSELECT
enable_collision_detection => address_of_collision.OUTPUTSELECT
enable_collision_detection => ball_x_dir.OUTPUTSELECT
enable_brick_erase => always5.IN1
enable_brick_erase => always7.IN0
enable_black_brick => always0.IN1
enable_black_brick => always7.IN1
x[0] <= x[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
x[1] <= x[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
x[2] <= x[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
x[3] <= x[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
x[4] <= x[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
x[5] <= x[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
x[6] <= x[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
x[7] <= x[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
y[0] <= y[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
colour[0] <= colour[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
colour[1] <= colour[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
colour[2] <= colour[2]$latch.DB_MAX_OUTPUT_PORT_TYPE


|BrickBreaker|datapath:d0|ram256x18:storage
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
clock => clock.IN1
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
wren => wren.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a
q[8] <= altsyncram:altsyncram_component.q_a
q[9] <= altsyncram:altsyncram_component.q_a
q[10] <= altsyncram:altsyncram_component.q_a
q[11] <= altsyncram:altsyncram_component.q_a
q[12] <= altsyncram:altsyncram_component.q_a
q[13] <= altsyncram:altsyncram_component.q_a
q[14] <= altsyncram:altsyncram_component.q_a
q[15] <= altsyncram:altsyncram_component.q_a
q[16] <= altsyncram:altsyncram_component.q_a
q[17] <= altsyncram:altsyncram_component.q_a


|BrickBreaker|datapath:d0|ram256x18:storage|altsyncram:altsyncram_component
wren_a => altsyncram_8dm1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_8dm1:auto_generated.data_a[0]
data_a[1] => altsyncram_8dm1:auto_generated.data_a[1]
data_a[2] => altsyncram_8dm1:auto_generated.data_a[2]
data_a[3] => altsyncram_8dm1:auto_generated.data_a[3]
data_a[4] => altsyncram_8dm1:auto_generated.data_a[4]
data_a[5] => altsyncram_8dm1:auto_generated.data_a[5]
data_a[6] => altsyncram_8dm1:auto_generated.data_a[6]
data_a[7] => altsyncram_8dm1:auto_generated.data_a[7]
data_a[8] => altsyncram_8dm1:auto_generated.data_a[8]
data_a[9] => altsyncram_8dm1:auto_generated.data_a[9]
data_a[10] => altsyncram_8dm1:auto_generated.data_a[10]
data_a[11] => altsyncram_8dm1:auto_generated.data_a[11]
data_a[12] => altsyncram_8dm1:auto_generated.data_a[12]
data_a[13] => altsyncram_8dm1:auto_generated.data_a[13]
data_a[14] => altsyncram_8dm1:auto_generated.data_a[14]
data_a[15] => altsyncram_8dm1:auto_generated.data_a[15]
data_a[16] => altsyncram_8dm1:auto_generated.data_a[16]
data_a[17] => altsyncram_8dm1:auto_generated.data_a[17]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_8dm1:auto_generated.address_a[0]
address_a[1] => altsyncram_8dm1:auto_generated.address_a[1]
address_a[2] => altsyncram_8dm1:auto_generated.address_a[2]
address_a[3] => altsyncram_8dm1:auto_generated.address_a[3]
address_a[4] => altsyncram_8dm1:auto_generated.address_a[4]
address_a[5] => altsyncram_8dm1:auto_generated.address_a[5]
address_a[6] => altsyncram_8dm1:auto_generated.address_a[6]
address_a[7] => altsyncram_8dm1:auto_generated.address_a[7]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_8dm1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_8dm1:auto_generated.q_a[0]
q_a[1] <= altsyncram_8dm1:auto_generated.q_a[1]
q_a[2] <= altsyncram_8dm1:auto_generated.q_a[2]
q_a[3] <= altsyncram_8dm1:auto_generated.q_a[3]
q_a[4] <= altsyncram_8dm1:auto_generated.q_a[4]
q_a[5] <= altsyncram_8dm1:auto_generated.q_a[5]
q_a[6] <= altsyncram_8dm1:auto_generated.q_a[6]
q_a[7] <= altsyncram_8dm1:auto_generated.q_a[7]
q_a[8] <= altsyncram_8dm1:auto_generated.q_a[8]
q_a[9] <= altsyncram_8dm1:auto_generated.q_a[9]
q_a[10] <= altsyncram_8dm1:auto_generated.q_a[10]
q_a[11] <= altsyncram_8dm1:auto_generated.q_a[11]
q_a[12] <= altsyncram_8dm1:auto_generated.q_a[12]
q_a[13] <= altsyncram_8dm1:auto_generated.q_a[13]
q_a[14] <= altsyncram_8dm1:auto_generated.q_a[14]
q_a[15] <= altsyncram_8dm1:auto_generated.q_a[15]
q_a[16] <= altsyncram_8dm1:auto_generated.q_a[16]
q_a[17] <= altsyncram_8dm1:auto_generated.q_a[17]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|BrickBreaker|datapath:d0|ram256x18:storage|altsyncram:altsyncram_component|altsyncram_8dm1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[0] => ram_block1a9.PORTAADDR
address_a[0] => ram_block1a10.PORTAADDR
address_a[0] => ram_block1a11.PORTAADDR
address_a[0] => ram_block1a12.PORTAADDR
address_a[0] => ram_block1a13.PORTAADDR
address_a[0] => ram_block1a14.PORTAADDR
address_a[0] => ram_block1a15.PORTAADDR
address_a[0] => ram_block1a16.PORTAADDR
address_a[0] => ram_block1a17.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[1] => ram_block1a9.PORTAADDR1
address_a[1] => ram_block1a10.PORTAADDR1
address_a[1] => ram_block1a11.PORTAADDR1
address_a[1] => ram_block1a12.PORTAADDR1
address_a[1] => ram_block1a13.PORTAADDR1
address_a[1] => ram_block1a14.PORTAADDR1
address_a[1] => ram_block1a15.PORTAADDR1
address_a[1] => ram_block1a16.PORTAADDR1
address_a[1] => ram_block1a17.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[2] => ram_block1a9.PORTAADDR2
address_a[2] => ram_block1a10.PORTAADDR2
address_a[2] => ram_block1a11.PORTAADDR2
address_a[2] => ram_block1a12.PORTAADDR2
address_a[2] => ram_block1a13.PORTAADDR2
address_a[2] => ram_block1a14.PORTAADDR2
address_a[2] => ram_block1a15.PORTAADDR2
address_a[2] => ram_block1a16.PORTAADDR2
address_a[2] => ram_block1a17.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[3] => ram_block1a9.PORTAADDR3
address_a[3] => ram_block1a10.PORTAADDR3
address_a[3] => ram_block1a11.PORTAADDR3
address_a[3] => ram_block1a12.PORTAADDR3
address_a[3] => ram_block1a13.PORTAADDR3
address_a[3] => ram_block1a14.PORTAADDR3
address_a[3] => ram_block1a15.PORTAADDR3
address_a[3] => ram_block1a16.PORTAADDR3
address_a[3] => ram_block1a17.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[4] => ram_block1a9.PORTAADDR4
address_a[4] => ram_block1a10.PORTAADDR4
address_a[4] => ram_block1a11.PORTAADDR4
address_a[4] => ram_block1a12.PORTAADDR4
address_a[4] => ram_block1a13.PORTAADDR4
address_a[4] => ram_block1a14.PORTAADDR4
address_a[4] => ram_block1a15.PORTAADDR4
address_a[4] => ram_block1a16.PORTAADDR4
address_a[4] => ram_block1a17.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[5] => ram_block1a9.PORTAADDR5
address_a[5] => ram_block1a10.PORTAADDR5
address_a[5] => ram_block1a11.PORTAADDR5
address_a[5] => ram_block1a12.PORTAADDR5
address_a[5] => ram_block1a13.PORTAADDR5
address_a[5] => ram_block1a14.PORTAADDR5
address_a[5] => ram_block1a15.PORTAADDR5
address_a[5] => ram_block1a16.PORTAADDR5
address_a[5] => ram_block1a17.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[6] => ram_block1a9.PORTAADDR6
address_a[6] => ram_block1a10.PORTAADDR6
address_a[6] => ram_block1a11.PORTAADDR6
address_a[6] => ram_block1a12.PORTAADDR6
address_a[6] => ram_block1a13.PORTAADDR6
address_a[6] => ram_block1a14.PORTAADDR6
address_a[6] => ram_block1a15.PORTAADDR6
address_a[6] => ram_block1a16.PORTAADDR6
address_a[6] => ram_block1a17.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[7] => ram_block1a9.PORTAADDR7
address_a[7] => ram_block1a10.PORTAADDR7
address_a[7] => ram_block1a11.PORTAADDR7
address_a[7] => ram_block1a12.PORTAADDR7
address_a[7] => ram_block1a13.PORTAADDR7
address_a[7] => ram_block1a14.PORTAADDR7
address_a[7] => ram_block1a15.PORTAADDR7
address_a[7] => ram_block1a16.PORTAADDR7
address_a[7] => ram_block1a17.PORTAADDR7
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock0 => ram_block1a9.CLK0
clock0 => ram_block1a10.CLK0
clock0 => ram_block1a11.CLK0
clock0 => ram_block1a12.CLK0
clock0 => ram_block1a13.CLK0
clock0 => ram_block1a14.CLK0
clock0 => ram_block1a15.CLK0
clock0 => ram_block1a16.CLK0
clock0 => ram_block1a17.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
data_a[4] => ram_block1a4.PORTADATAIN
data_a[5] => ram_block1a5.PORTADATAIN
data_a[6] => ram_block1a6.PORTADATAIN
data_a[7] => ram_block1a7.PORTADATAIN
data_a[8] => ram_block1a8.PORTADATAIN
data_a[9] => ram_block1a9.PORTADATAIN
data_a[10] => ram_block1a10.PORTADATAIN
data_a[11] => ram_block1a11.PORTADATAIN
data_a[12] => ram_block1a12.PORTADATAIN
data_a[13] => ram_block1a13.PORTADATAIN
data_a[14] => ram_block1a14.PORTADATAIN
data_a[15] => ram_block1a15.PORTADATAIN
data_a[16] => ram_block1a16.PORTADATAIN
data_a[17] => ram_block1a17.PORTADATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
q_a[8] <= ram_block1a8.PORTADATAOUT
q_a[9] <= ram_block1a9.PORTADATAOUT
q_a[10] <= ram_block1a10.PORTADATAOUT
q_a[11] <= ram_block1a11.PORTADATAOUT
q_a[12] <= ram_block1a12.PORTADATAOUT
q_a[13] <= ram_block1a13.PORTADATAOUT
q_a[14] <= ram_block1a14.PORTADATAOUT
q_a[15] <= ram_block1a15.PORTADATAOUT
q_a[16] <= ram_block1a16.PORTADATAOUT
q_a[17] <= ram_block1a17.PORTADATAOUT
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a4.PORTAWE
wren_a => ram_block1a5.PORTAWE
wren_a => ram_block1a6.PORTAWE
wren_a => ram_block1a7.PORTAWE
wren_a => ram_block1a8.PORTAWE
wren_a => ram_block1a9.PORTAWE
wren_a => ram_block1a10.PORTAWE
wren_a => ram_block1a11.PORTAWE
wren_a => ram_block1a12.PORTAWE
wren_a => ram_block1a13.PORTAWE
wren_a => ram_block1a14.PORTAWE
wren_a => ram_block1a15.PORTAWE
wren_a => ram_block1a16.PORTAWE
wren_a => ram_block1a17.PORTAWE


|BrickBreaker|hex_decoder:hex0
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|BrickBreaker|hex_decoder:hex1
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|BrickBreaker|hex_decoder:hex2
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|BrickBreaker|hex_decoder:hex3
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|BrickBreaker|hex_decoder:hex4
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|BrickBreaker|hex_decoder:hex5
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|BrickBreaker|mouse_tracker:tester
clock => clock.IN1
reset => _.IN1
reset => byte1.OUTPUTSELECT
reset => byte1.OUTPUTSELECT
reset => byte1.OUTPUTSELECT
reset => byte1.OUTPUTSELECT
reset => byte1.OUTPUTSELECT
reset => byte1.OUTPUTSELECT
reset => byte2.OUTPUTSELECT
reset => byte2.OUTPUTSELECT
reset => byte2.OUTPUTSELECT
reset => byte2.OUTPUTSELECT
reset => byte2.OUTPUTSELECT
reset => byte2.OUTPUTSELECT
reset => byte2.OUTPUTSELECT
reset => byte2.OUTPUTSELECT
reset => byte3.OUTPUTSELECT
reset => byte3.OUTPUTSELECT
reset => byte3.OUTPUTSELECT
reset => byte3.OUTPUTSELECT
reset => byte3.OUTPUTSELECT
reset => byte3.OUTPUTSELECT
reset => byte3.OUTPUTSELECT
reset => byte3.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => left_click.OUTPUTSELECT
reset => right_click.OUTPUTSELECT
reset => init_byte_received.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => curr_state.OUTPUTSELECT
reset => curr_state.OUTPUTSELECT
reset => curr_state.OUTPUTSELECT
reset => curr_state.OUTPUTSELECT
reset => curr_state.OUTPUTSELECT
reset => curr_state.OUTPUTSELECT
reset => curr_state.OUTPUTSELECT
reset => curr_state.OUTPUTSELECT
enable_tracking => x_pos.IN1
enable_tracking => y_pos.IN1
PS2_CLK <> PS2_Controller:tracker2.PS2_CLK
PS2_DAT <> PS2_Controller:tracker2.PS2_DAT
x_pos[0] <= x_pos[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_pos[1] <= x_pos[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_pos[2] <= x_pos[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_pos[3] <= x_pos[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_pos[4] <= x_pos[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_pos[5] <= x_pos[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_pos[6] <= x_pos[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_pos[7] <= x_pos[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_pos[8] <= x_pos[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_pos[0] <= y_pos[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_pos[1] <= y_pos[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_pos[2] <= y_pos[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_pos[3] <= y_pos[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_pos[4] <= y_pos[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_pos[5] <= y_pos[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_pos[6] <= y_pos[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_pos[7] <= y_pos[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_pos[8] <= y_pos[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
right_click <= right_click~reg0.DB_MAX_OUTPUT_PORT_TYPE
left_click <= left_click~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BrickBreaker|mouse_tracker:tester|PS2_Controller:tracker2
CLOCK_50 => CLOCK_50.IN2
reset => reset.IN2
the_command[0] => the_command_w.DATAB
the_command[1] => the_command_w.DATAB
the_command[2] => the_command_w.DATAB
the_command[3] => the_command_w.DATAB
the_command[4] => the_command_w.DATAB
the_command[5] => the_command_w.DATAB
the_command[6] => the_command_w.DATAB
the_command[7] => the_command_w.DATAB
send_command => send_command_w.DATAB
send_command => always2.IN1
send_command => ns_ps2_transceiver.DATAB
send_command => ns_ps2_transceiver.OUTPUTSELECT
send_command => ns_ps2_transceiver.OUTPUTSELECT
send_command => Selector0.IN2
send_command => ns_ps2_transceiver.DATAB
PS2_CLK <> Altera_UP_PS2_Command_Out:PS2_Command_Out.PS2_CLK
PS2_DAT <> Altera_UP_PS2_Command_Out:PS2_Command_Out.PS2_DAT
command_was_sent <= command_was_sent.DB_MAX_OUTPUT_PORT_TYPE
error_communication_timed_out <= error_communication_timed_out.DB_MAX_OUTPUT_PORT_TYPE
received_data[0] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[1] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[2] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[3] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[4] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[5] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[6] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[7] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data_en <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data_en


|BrickBreaker|mouse_tracker:tester|PS2_Controller:tracker2|Altera_UP_PS2_Data_In:PS2_Data_In
clk => received_data_en~reg0.CLK
clk => received_data[0]~reg0.CLK
clk => received_data[1]~reg0.CLK
clk => received_data[2]~reg0.CLK
clk => received_data[3]~reg0.CLK
clk => received_data[4]~reg0.CLK
clk => received_data[5]~reg0.CLK
clk => received_data[6]~reg0.CLK
clk => received_data[7]~reg0.CLK
clk => data_shift_reg[0].CLK
clk => data_shift_reg[1].CLK
clk => data_shift_reg[2].CLK
clk => data_shift_reg[3].CLK
clk => data_shift_reg[4].CLK
clk => data_shift_reg[5].CLK
clk => data_shift_reg[6].CLK
clk => data_shift_reg[7].CLK
clk => data_count[0].CLK
clk => data_count[1].CLK
clk => data_count[2].CLK
clk => data_count[3].CLK
clk => s_ps2_receiver~1.DATAIN
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data_en.OUTPUTSELECT
wait_for_incoming_data => always1.IN1
wait_for_incoming_data => ns_ps2_receiver.DATAA
wait_for_incoming_data => ns_ps2_receiver.DATAA
start_receiving_data => always1.IN1
ps2_clk_posedge => always1.IN0
ps2_clk_posedge => always1.IN1
ps2_clk_posedge => always2.IN0
ps2_clk_posedge => always5.IN0
ps2_clk_posedge => Selector4.IN3
ps2_clk_posedge => Selector0.IN4
ps2_clk_posedge => Selector4.IN1
ps2_clk_posedge => Selector3.IN2
ps2_clk_negedge => ~NO_FANOUT~
ps2_data => data_shift_reg.DATAB
ps2_data => always1.IN1
received_data[0] <= received_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[1] <= received_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[2] <= received_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[3] <= received_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[4] <= received_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[5] <= received_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[6] <= received_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[7] <= received_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data_en <= received_data_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BrickBreaker|mouse_tracker:tester|PS2_Controller:tracker2|Altera_UP_PS2_Command_Out:PS2_Command_Out
clk => error_communication_timed_out~reg0.CLK
clk => command_was_sent~reg0.CLK
clk => cur_bit[0].CLK
clk => cur_bit[1].CLK
clk => cur_bit[2].CLK
clk => cur_bit[3].CLK
clk => transfer_counter[1].CLK
clk => transfer_counter[2].CLK
clk => transfer_counter[3].CLK
clk => transfer_counter[4].CLK
clk => transfer_counter[5].CLK
clk => transfer_counter[6].CLK
clk => transfer_counter[7].CLK
clk => transfer_counter[8].CLK
clk => transfer_counter[9].CLK
clk => transfer_counter[10].CLK
clk => transfer_counter[11].CLK
clk => transfer_counter[12].CLK
clk => transfer_counter[13].CLK
clk => transfer_counter[14].CLK
clk => transfer_counter[15].CLK
clk => transfer_counter[16].CLK
clk => transfer_counter[17].CLK
clk => waiting_counter[1].CLK
clk => waiting_counter[2].CLK
clk => waiting_counter[3].CLK
clk => waiting_counter[4].CLK
clk => waiting_counter[5].CLK
clk => waiting_counter[6].CLK
clk => waiting_counter[7].CLK
clk => waiting_counter[8].CLK
clk => waiting_counter[9].CLK
clk => waiting_counter[10].CLK
clk => waiting_counter[11].CLK
clk => waiting_counter[12].CLK
clk => waiting_counter[13].CLK
clk => waiting_counter[14].CLK
clk => waiting_counter[15].CLK
clk => waiting_counter[16].CLK
clk => waiting_counter[17].CLK
clk => waiting_counter[18].CLK
clk => waiting_counter[19].CLK
clk => waiting_counter[20].CLK
clk => command_initiate_counter[1].CLK
clk => command_initiate_counter[2].CLK
clk => command_initiate_counter[3].CLK
clk => command_initiate_counter[4].CLK
clk => command_initiate_counter[5].CLK
clk => command_initiate_counter[6].CLK
clk => command_initiate_counter[7].CLK
clk => command_initiate_counter[8].CLK
clk => command_initiate_counter[9].CLK
clk => command_initiate_counter[10].CLK
clk => command_initiate_counter[11].CLK
clk => command_initiate_counter[12].CLK
clk => command_initiate_counter[13].CLK
clk => ps2_command[0].CLK
clk => ps2_command[1].CLK
clk => ps2_command[2].CLK
clk => ps2_command[3].CLK
clk => ps2_command[4].CLK
clk => ps2_command[5].CLK
clk => ps2_command[6].CLK
clk => ps2_command[7].CLK
clk => ps2_command[8].CLK
clk => s_ps2_transmitter~1.DATAIN
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => command_was_sent.OUTPUTSELECT
reset => error_communication_timed_out.OUTPUTSELECT
the_command[0] => WideXor0.IN0
the_command[0] => ps2_command.DATAB
the_command[1] => WideXor0.IN1
the_command[1] => ps2_command.DATAB
the_command[2] => WideXor0.IN2
the_command[2] => ps2_command.DATAB
the_command[3] => WideXor0.IN3
the_command[3] => ps2_command.DATAB
the_command[4] => WideXor0.IN4
the_command[4] => ps2_command.DATAB
the_command[5] => WideXor0.IN5
the_command[5] => ps2_command.DATAB
the_command[6] => WideXor0.IN6
the_command[6] => ps2_command.DATAB
the_command[7] => WideXor0.IN7
the_command[7] => ps2_command.DATAB
send_command => Selector1.IN3
send_command => Selector6.IN2
send_command => Selector7.IN6
send_command => command_was_sent.OUTPUTSELECT
send_command => error_communication_timed_out.OUTPUTSELECT
send_command => Selector0.IN1
ps2_clk_posedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_posedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_posedge => Selector6.IN3
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => always1.IN1
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => always6.IN0
ps2_clk_negedge => Selector3.IN3
ps2_clk_negedge => Selector5.IN3
PS2_CLK <> PS2_CLK
PS2_DAT <> PS2_DAT
command_was_sent <= command_was_sent~reg0.DB_MAX_OUTPUT_PORT_TYPE
error_communication_timed_out <= error_communication_timed_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


